[gcode_macro POWER_OFF]
gcode:
  {% set STATE = printer.print_stats.state %}    
  {% set NOCHECK = params.NOCHECK | default(0) %}    
  {% if NOCHECK == "1" or (STATE != "printing" and STATE != "paused") %}
    M118 Wait for cooldown extruder
    SET_HEATER_TEMPERATURE HEATER="extruder"
    TEMPERATURE_WAIT SENSOR="extruder" MAXIMUM=50
      
    SET_PIN PIN=printer_ac VALUE=0   
    
    UPDATE_DELAYED_GCODE ID=_delayed_power_off DURATION=6
  {% else %}
    M118 Still printing or paused
  {% endif %}

[delayed_gcode _delayed_power_off]
gcode:
  {action_call_remote_method("shutdown_machine")} 

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:
#  {% set STATE = printer.print_stats.state %}  

#  {% if STATE != "paused" %}
    SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 TRANSMIT=1
#    SET_LED LED="extruder" RED=1 GREEN=0.65 BLUE=0 TRANSMIT=1 #orange, pause
    
    M118 Pause print    
    
    PAUSE_BASE {rawparams}
    # save extruder temperature
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer.extruder.target}"
    _PARK
#  {% endif %}  

[gcode_macro M600]
description: Filament change
gcode:
  PAUSE
  UNLOAD_FILAMENT
  M118 Change filament

[gcode_macro RESUME]
variable_last_extruder_temp: 0
rename_existing: RESUME_BASE
gcode:
  SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 TRANSMIT=1  
  M118 Resume print  
  # restore extruder temperature  

#  SET_LED LED="extruder" RED=1 GREEN=0 BLUE=1 TRANSMIT=1 #purple, heatup
  M118 Resume print, heat nozzle up to {last_extruder_temp}Â°C
  M109 S{last_extruder_temp}

  SAVE_GCODE_STATE NAME=_RESUME

  {% if printer.extruder.can_extrude %}
    M83 # relative extrusion
    G1 E5 F{10 * 60} # unretract filament
  {% endif %}

  RESTORE_GCODE_STATE NAME=_RESUME

  RESUME_BASE {rawparams}
#  SET_LED LED="extruder" RED=1 GREEN=1 BLUE=1 TRANSMIT=1 #white, print

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  M118 Cancel print
  SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 TRANSMIT=1

#  SET_LED LED="extruder" RED=0 GREEN=1 BLUE=1 TRANSMIT=1 #cyan, shutdown
  _PARK 
  _SHUTDOWN    

  CANCEL_PRINT_BASE {rawparams}

#  SET_LED LED="extruder" RED=0 GREEN=1 BLUE=0 TRANSMIT=1 #green, ready

[gcode_macro START_PRINT]
description: Internal 
  Startcode to prepare a new printing
  triggered by slicer 
gcode:
  SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 TRANSMIT=1
#  SET_LED LED="extruder" RED=0 GREEN=0 BLUE=1 TRANSMIT=1 #blue, start

  CLEAR_PAUSE
  BED_MESH_CLEAR

  {% set BED_TEMP = params.BED_TEMP | default(60) | float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(200) | float %}
  {% set ADAPTIVE_MESH = params.ADAPTIVE_MESH | default(1) | int %}

  {% set MIN_X = printer.toolhead.axis_minimum.x | float %}
  {% set MIN_Y = printer.toolhead.axis_minimum.y | float %}
  {% set MAX_X = printer.toolhead.axis_maximum.x | float %}
  {% set MAX_Y = printer.toolhead.axis_maximum.y | float %}

  M190 S{BED_TEMP}
  M104 S{EXTRUDER_TEMP*0.70}  
  
  G28
  {% if ADAPTIVE_MESH == 1  %}  
    BED_MESH_CALIBRATE PROFILE=adapt ADAPTIVE=1 # METHOD=rapid_scan  #METHOD=scan
  {% else %}
    BED_MESH_PROFILE LOAD=default
  {% endif %}
 
  M83 # relative extrusion mode
  G90 # use absolute coordinates
  G92 E0 # reset extruder
  G0 X{MIN_X} Y{MAX_Y} Z50 F{100 * 60}  

  M109 S{EXTRUDER_TEMP}  

  _PRIME_LINE
 
  G92 E0 # reset extruder  

[gcode_macro END_PRINT]
description: Internal
  Endcode to finalize made printing
  triggered by slicer 
variable_unload_filament: 0
variable_power_off: 0
gcode:
  SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 TRANSMIT=1
 
  _PARK

  {% if unload_filament > 0  %}    
    UNLOAD_FILAMENT
  {% endif %}  
  
  _SHUTDOWN  

  {% if power_off > 0  %}    
    SET_LED LED="chamber" RED=0.25 GREEN=0.25 BLUE=0 WHITE=0 TRANSMIT=1

    M118 Power off after cooldown extruder
    POWER_OFF NOCHECK=1
  {% endif %}  

[gcode_macro UNLOAD_ON_END_PRINT]
description:
  If ENABLED > 0, END_PRINT script unloads filament before shutdown
gcode:
  {% set unload_enabled = params.ENABLED | default(1) %}
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=unload_filament VALUE={unload_enabled}

[gcode_macro POWER_OFF_END_PRINT]
description:
  If ENABLED > 0, END_PRINT script powers the machine of after end print
gcode:
  {% set power_off_enabled = params.ENABLED | default(1) %}
  SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=power_off VALUE={power_off_enabled}  

[gcode_macro _SHUTDOWN]
description: Shutdown the printer
gcode:
  
  G92 E0 # Reset Extruder
  G90 # Reset to absolute mode
  
  TURN_OFF_HEATERS
  M106 S0 # Turn of extruder-fan
  M220 S100 # Reset Speed factor override percentage to default (100%)
  M221 S100 # Reset Extruder flow rate override percentage to default (100%)
  
  M84 # Disable steppers # Solved by RUN_IDLE_TIMEOUT   

[gcode_macro _PRIME_LINE]
description: Purges and wipes the Nozzle
gcode: 
  SAVE_GCODE_STATE NAME=_fd_prime_line_state_b

  {% set MIN_X = printer.toolhead.axis_minimum.x | float %}
  {% set MIN_Y = printer.toolhead.axis_minimum.y | float %}
  {% set MAX_X = printer.toolhead.axis_maximum.x | float %}
  {% set MAX_Y = printer.toolhead.axis_maximum.y | float %}

  {% set DIAMETER_NOZZLE = printer.configfile.settings.extruder.nozzle_diameter | float %}
  {% set DIAMETER_FILAMENT = printer.configfile.settings.extruder.filament_diameter | float %}
  {% set MAX_CROSSSECTION = printer.configfile.settings.extruder.max_extrude_cross_section | float %} # 4.0 * DIAMETER_NOZZLE**2

  {% set NOZZLE_VOLUME = 65 | float %}

  {% set PI = 3.141592653589793 | float %}  

  {% set CROSSSECTION_NOZZLE = PI * DIAMETER_NOZZLE**2 / 4.0 | float %}
  {% set CROSSSECTION_FILAMENT = PI * DIAMETER_FILAMENT**2 / 4.0 | float %}

  {% set EXT_HEIGHT_DEFAULT = 0.75 * DIAMETER_NOZZLE | float %}
  {% set EXT_WIDTH_DEFAULT = EXT_HEIGHT_DEFAULT + DIAMETER_NOZZLE | float %}
  # {% set EXT_CROSSSECTION = EXT_WIDTH_DEFAULT * EXT_HEIGHT_DEFAULT | float %}
  {% set EXT_CROSSSECTION = MAX_CROSSSECTION * 0.85 | float %}

  {% set MOVE_LENGTH = NOZZLE_VOLUME / EXT_CROSSSECTION | float %}
  {% set FILA_LENGTH = NOZZLE_VOLUME / CROSSSECTION_FILAMENT | float %}

  {% set START_X = MIN_X | float %}
  {% set START_Y = MIN_Y+MOVE_LENGTH | float %}
  {% set START_Z = 2 | float %}

  M118 Purge Nozzle  

  G90 ; use absolute coordinates
  G92 E0 ; reset extruder position 
  M83 # E Relative
  
  G0 X{START_X} Y{START_Y} Z{START_Z} F{45 * 60} ; go to start position

  G91
  G1 Y{"%.3f" % (-0.25 * MOVE_LENGTH)} Z{"%.3f" % ((-1.0 * START_Z) + EXT_HEIGHT_DEFAULT)} E{FILA_LENGTH * 0.25} F{8.5 * 60}
  G1 Y{"%.3f" % (-0.25 * MOVE_LENGTH)} E{FILA_LENGTH * 0.25} F{8.5 * 60}
  G1 Y{"%.3f" % (-0.25 * MOVE_LENGTH)} E{FILA_LENGTH * 0.25} F{11 * 60}
  G1 Y{"%.3f" % (-0.25 * MOVE_LENGTH)} E{FILA_LENGTH * 0.25} F{13.5 * 60} 

  M118 Wipe Nozzle
 
  G0 X{"%.3f" % (+3)} Z{"%.3f" % (0.05 - EXT_HEIGHT_DEFAULT)} F{150 * 60} ; wipe, move close to the bed  
  G0 X{"%.3f" % (+3)} Z{"%.3f" % (EXT_HEIGHT_DEFAULT - 0.05 + 2)} F{150 * 60} ; wipe, move quickly away from the bed

  G90
  G0 Z2 F{20 * 60}

  RESTORE_GCODE_STATE NAME=_fd_prime_line_state_b

[gcode_macro _PARK]
gcode:
  SAVE_GCODE_STATE NAME=_fd_park_state 

  M118 Park extruder

  {% set PARK_X = printer.toolhead.axis_minimum.x | float %}
  {% set PARK_Y = printer.toolhead.axis_maximum.y | float %}
  {% set PARK_Z = printer.toolhead.position.z + 5 | float %}

  {% if not (printer.toolhead.position.x == PARK_X and printer.toolhead.position.y == PARK_Y) %}
    {% if PARK_Z < 50 %}
      {% set PARK_Z = 50 | float %}  
    {% endif %}
    
    {% if PARK_Z > printer.toolhead.axis_maximum.z %}
      {% set PARK_Z = printer.toolhead.axis_maximum.z %}
    {% endif %}

    {% if printer.extruder.can_extrude %}
      M83 # relative extrusion
      G1 E-1 F{40 * 60} # retract filament
    {% endif %}
  {% endif %}  

  G91  
  G0 Z3 F{20 * 60}

  G90 # use absolute coordinates  
  G0 X{PARK_X} Y{PARK_Y} Z{PARK_Z} F{100 * 60} # move to corner of the bed to avoid ooze over centre  

  RESTORE_GCODE_STATE NAME=_fd_park_state   

[gcode_macro _RUN_IDLE_TIMEOUT]
description:  Internal
  Starts if idle timeout has expired
  triggered by klipper
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer.extruder.target}"  
    
    M118 Idle timeout, hotend cooldown

    M104 S0  # cooldown the hotend
    SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 SYNC=0 TRANSMIT=1
  {% else %}
    M118 Idle timeout, poweroff
    
    _SHUTDOWN
    M84    

    SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=0.25 SYNC=0 TRANSMIT=1
  {% endif %}  

#[delayed_gcode _report_temp]
#initial_duration: 2.
[gcode_macro report_temp]
gcode:

  {% set BED_TEMP_CURRENT = printer.heater_bed.temperature %}
  {% set BED_TEMP_TARGET = printer.heater_bed.target %}
  {% set NOZZLE_TEMP_CURRENT = printer.extruder.temperature %}
  {% set NOZZLE_TEMP_TARGET = printer.extruder.target %}

  {% set NRED = 0 %}
  {% set NGREEN = 0 %}
  {% set NBLUE = 0 %}
  {% set NWHITE = 0 %}
  
  {% if NOZZLE_TEMP_TARGET < 35  %}    
    {% set NGREEN = 1 %}      
  {% else %}    
    {% if NOZZLE_TEMP_TARGET > NOZZLE_TEMP_CURRENT + 1 %}
      {% set NRED = 1 %}   
    {% elif NOZZLE_TEMP_TARGET < NOZZLE_TEMP_CURRENT - 1 %}
      {% set NBLUE = 1 %}
    {% else %}
      {% set NRED = 1 %}   
      {% set NGREEN = 1 %}
      {% set NBLUE = 1 %}   
    {% endif %}  
  {% endif %}  

  {% set PNRED = 0 %}
  {% set PNGREEN = 0 %}
  {% set PNBLUE = 0 %}
  {% set PNWHITE = 0 %}
  
  {% if NOZZLE_TEMP_TARGET < 35  %}    
    {% set PNGREEN = 1 %}      
  {% else %}    
    {% if NOZZLE_TEMP_TARGET > NOZZLE_TEMP_CURRENT + 1 %}
      {% set PNRED = 1 %}         
    {% elif NOZZLE_TEMP_TARGET < NOZZLE_TEMP_CURRENT - 1 %}
      {% set PNBLUE = 1 %}
    {% else %}
      {% set PNWHITE = 1 %}   
    {% endif %}  
  {% endif %}    

  {% set PBRED = 0 %}
  {% set PBGREEN = 0 %}
  {% set PBBLUE = 0 %}
  {% set PBWHITE = 0 %}
  
  {% if BED_TEMP_TARGET < 35  %}    
    {% set PBGREEN = 1 %}      
  {% else %}    
    {% if BED_TEMP_TARGET > BED_TEMP_CURRENT + 1 %}
      {% set PBRED = 1 %}   
    {% elif BED_TEMP_TARGET < BED_TEMP_CURRENT - 1 %}
      {% set PBBLUE = 1 %}
    {% else %}
      {% set PBWHITE = 1 %}   
    {% endif %}  
  {% endif %}  

#  SET_LED LED="extruder" RED={NRED} GREEN={NGREEN} BLUE={NBLUE} SYNC=0 TRANSMIT=1

  SET_LED LED="chamber" RED={PBRED} GREEN={PBGREEN} BLUE={PBBLUE} WHITE={PBWHITE} SYNC=0 INDEX=24 TRANSMIT=0
  SET_LED LED="chamber" RED={PBRED} GREEN={PBGREEN} BLUE={PBBLUE} WHITE={PBWHITE} SYNC=0 INDEX=25 TRANSMIT=0
  SET_LED LED="chamber" RED={PNRED} GREEN={PNGREEN} BLUE={PNBLUE} WHITE={PNWHITE} SYNC=0 INDEX=1 TRANSMIT=0
  SET_LED LED="chamber" RED={PNRED} GREEN={PNGREEN} BLUE={PNBLUE} WHITE={PNWHITE} SYNC=0 INDEX=2 TRANSMIT=1
  
#  UPDATE_DELAYED_GCODE ID=_report_temp DURATION=2

[gcode_macro LOAD_FILAMENT]
description: KlipperScreen
variable_load_distance: 60
#variable_purge_distance: 10
gcode:
    {% set speed = params.PURGE_SPEED | default(8 * 60) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 | default ( params.LOAD_SPEED ) %}

    SAVE_GCODE_STATE NAME=load_filament_state
    
    G91
    G92 E0
    G1 E{load_distance} F{350}

    RESTORE_GCODE_STATE NAME=load_filament_state

[gcode_macro UNLOAD_FILAMENT]
description: KlipperScreen
variable_unload_distance: 20
#variable_purge_distance: 10
gcode:
    {% set speed = params.PURGE_SPEED | default(8 * 60) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 | default ( params.UNLOAD_SPEED ) %}
    
    SAVE_GCODE_STATE NAME=unload_filament_state
    
    G91
    G92 E0
    G1 E2 F300
    G1 E-{unload_distance} F{700} # fast-unload
    
    RESTORE_GCODE_STATE NAME=unload_filament_state